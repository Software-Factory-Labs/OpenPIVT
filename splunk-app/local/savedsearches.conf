# Copyright 2019 The Aerospace Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[general]
display.visualizations.custom.pivt.timeline.xAxisStartAt1 = no
display.visualizations.custom.pivt.timeline.xAxisFormat = linear

[PIVT Jenkins FT Features]
action.email.useNSSubject = 1
alert.track = 0
auto_summarize.dispatch.earliest_time = -1y@d
cron_schedule = 0 * * * *
dispatch.earliest_time = -1y
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = pivt
request.ui_dispatch_view = search
search = index=pivt_jenkins_ft source=*features* report_name!=*integrity* job_instance=$instance$\
| rename job_instance as instance\
| rename job_ci as ci\
| rename job_number as number\
| rename job_release as release\
| rename result as feat_result\
| eval duration = null()\
| append\
    [search index=pivt_jenkins stage=AWS_FunctionalTest instance=$instance$\
    | rename pipeline_properties.%%ci33%%_BUILD_TYPE as %%ci33%%_BUILD_TYPE, pipeline_properties.%%ci33%%_BUILD_VERSION as %%ci33%%_BUILD_VERSION, pipeline_properties.%%ci21%%_BUILD_VERSION as %%ci21%%_BUILD_VERSION, pipeline_properties.%%ci22%%_BUILD_VERSION as %%ci22%%_BUILD_VERSION\
    | fillnull value="-" %%ci33%%_BUILD_TYPE, %%ci33%%_BUILD_VERSION, %%ci21%%_BUILD_VERSION, %%ci22%%_BUILD_VERSION\
    | eval %%ci33%%_BUILD_TYPE = if(%%ci33%%_BUILD_TYPE == "", "-", replace(%%ci33%%_BUILD_TYPE, ",", "\c"))\
    | eval %%ci33%%_BUILD_VERSION = if(%%ci33%%_BUILD_VERSION == "", "-", replace(%%ci33%%_BUILD_VERSION, ",", "\c"))\
    | eval %%ci21%%_BUILD_VERSION = if(%%ci21%%_BUILD_VERSION == "", "-", replace(%%ci21%%_BUILD_VERSION, ",", "\c"))\
    | eval %%ci22%%_BUILD_VERSION = if(%%ci22%%_BUILD_VERSION == "", "-", replace(%%ci22%%_BUILD_VERSION, ",", "\c"))\
    | eval build = _time . "," . instance . "," . ci . "," . ss . "," . iteration . "," . release . "," . number . "," . derived_cause . "," . duration . "," . result . "," . %%ci33%%_BUILD_TYPE . "," . %%ci33%%_BUILD_VERSION . "," . %%ci21%%_BUILD_VERSION . "," . %%ci22%%_BUILD_VERSION\
    | fields PIPELINE_URL build\
    | `combine_with_pipelines`\
    | where isnotnull(build)\
    | search `nominal($nominal$)`\
    | mvexpand build\
    | eval build = split(build, ",")\
    | eval _time = mvindex(build, 0), instance = mvindex(build, 1), ci = mvindex(build, 2), ss = mvindex(build, 3), iteration = mvindex(build, 4), release = mvindex(build, 5), number = mvindex(build, 6), derived_cause = mvindex(build, 7), duration = mvindex(build, 8), result = mvindex(build, 9), %%ci33%%_BUILD_TYPE = replace(mvindex(build, 10), "\\\c", ","), %%ci33%%_BUILD_VERSION = replace(mvindex(build, 11), "\\\c", ","), %%ci21%%_BUILD_VERSION = replace(mvindex(build, 12), "\\\c", ","), %%ci22%%_BUILD_VERSION = replace(mvindex(build, 13), "\\\c", ",")\
    | fields - build\
    | fields _time *]\
| stats values(ss) as ss, values(iteration) as iteration, values(result) as result, values(duration) as duration, values(derived_cause) as derived_cause, values(PIPELINE_URL) as PIPELINE_URL, values(p_number) as p_number, values(nominal) as nominal, values(report_name) as report_name, count as feat_count, count(eval(feat_result="passed")) as feat_passed, count(eval(feat_result="failed" OR feat_result="skipped")) as feat_failed, values(%%ci33%%_BUILD_TYPE) as %%ci33%%_BUILD_TYPE, values(%%ci33%%_BUILD_VERSION) as %%ci33%%_BUILD_VERSION, values(%%ci21%%_BUILD_VERSION) as %%ci21%%_BUILD_VERSION, values(%%ci22%%_BUILD_VERSION) as %%ci22%%_BUILD_VERSION by _time, instance, ci, release, number\
| where isnotnull(p_number)\
| where isnotnull(report_name)

[PIVT Jenkins FT Scenario TTR by Build]
action.email.useNSSubject = 1
action.lookup = 0
action.lookup.filename = pivt_jenkins_ft_scen_ttr.csv
alert.track = 0
cron_schedule = 15 * * * *
dispatch.earliest_time = 0
disabled = 1
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = pivt
request.ui_dispatch_view = search
search = index=pivt_jenkins_ft source=*scenarios*\
| rename job_instance as instance, job_ci as ci, job_release as release, job_number as number\
| fields _time instance ci release number id result\
| sort 0 -_time\
| ttr ttrfield=ttr resultfield=result passvalue=passed instance ci release id\
| stats count(eval(result="passed")) as scen_passed, count(eval(result="failed")) as scen_failed, sum(ttr) as total_ttr, count(eval(isnotnull(ttr))) as count_ttr by _time, instance, ci, release, number\
| outputlookup pivt_jenkins_ft_scen_ttr.csv

[PIVT Jenkins FT Scenarios]
action.email.useNSSubject = 1
alert.track = 0
auto_summarize.dispatch.earliest_time = -1y@d
cron_schedule = 0 * * * *
dispatch.earliest_time = -1y
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = pivt
request.ui_dispatch_view = search
search = | tstats count as scen_count, sum(ft.passed) as scen_passed, sum(ft.core) as core_tests, sum(ft.core_passed) as core_passed, values(ft.reqs) as reqs, sum(ft.req_scen) as req_scens, sum(ft.planned_regression) as planned_regression, sum(ft.planned_regression_failed) as planned_regression_failed from datamodel=pivt_jenkins.ft where nodename=ft.scenarios, ft.job_instance=$instance$ ft.report_name!=*integrity* by ft.job_timestamp, ft.job_instance, ft.job_ci, ft.job_release, ft.job_number\
| rename ft.job_timestamp as _time\
| eval _time = round(_time / 1000, 3)\
| rename ft.* as *\
| rename job_* as *\
| eval scen_count = case("$tag$"=="core", core_tests, "$tag$"=="notcore", scen_count - core_tests, true(), scen_count)\
| eval scen_passed = case("$tag$"=="core", core_passed, "$tag$"=="notcore", scen_passed - core_passed, true(), scen_passed)\
| eval req_count = mvcount(reqs)\
| fillnull req_count\
| append\
    [search index=pivt_jenkins stage=AWS_FunctionalTest instance=$instance$\
    | rename pipeline_properties.%%ci33%%_BUILD_TYPE as %%ci33%%_BUILD_TYPE, pipeline_properties.%%ci33%%_BUILD_VERSION as %%ci33%%_BUILD_VERSION, pipeline_properties.%%ci21%%_BUILD_VERSION as %%ci21%%_BUILD_VERSION, pipeline_properties.%%ci22%%_BUILD_VERSION as %%ci22%%_BUILD_VERSION\
    | fillnull value="-" %%ci33%%_BUILD_TYPE, %%ci33%%_BUILD_VERSION, %%ci21%%_BUILD_VERSION, %%ci22%%_BUILD_VERSION\
    | eval %%ci33%%_BUILD_TYPE = if(%%ci33%%_BUILD_TYPE == "", "-", replace(%%ci33%%_BUILD_TYPE, ",", "\c"))\
    | eval %%ci33%%_BUILD_VERSION = if(%%ci33%%_BUILD_VERSION == "", "-", replace(%%ci33%%_BUILD_VERSION, ",", "\c"))\
    | eval %%ci21%%_BUILD_VERSION = if(%%ci21%%_BUILD_VERSION == "", "-", replace(%%ci21%%_BUILD_VERSION, ",", "\c"))\
    | eval %%ci22%%_BUILD_VERSION = if(%%ci22%%_BUILD_VERSION == "", "-", replace(%%ci22%%_BUILD_VERSION, ",", "\c"))\
    | fillnull value="-" tag reqs scen\
    | eval build = _time . "," . instance . "," . ci . "," . ss . "," . iteration . "," . release . "," . number . "," . derived_cause . "," . duration . "," . result . "," . %%ci33%%_BUILD_TYPE . "," . %%ci33%%_BUILD_VERSION . "," . %%ci21%%_BUILD_VERSION . "," . %%ci22%%_BUILD_VERSION\
    | fields PIPELINE_URL build\
    | `combine_with_pipelines`\
    | where isnotnull(build)\
    | search `nominal($nominal$)`\
    | mvexpand build\
    | eval build = split(build, ",")\
    | eval _time = mvindex(build, 0), instance = mvindex(build, 1), ci = mvindex(build, 2), ss = mvindex(build, 3), iteration = mvindex(build, 4), release = mvindex(build, 5), number = mvindex(build, 6), derived_cause = mvindex(build, 7), duration = mvindex(build, 8), result = mvindex(build, 9), %%ci33%%_BUILD_TYPE = replace(mvindex(build, 10), "\\\c", ","), %%ci33%%_BUILD_VERSION = replace(mvindex(build, 11), "\\\c", ","), %%ci21%%_BUILD_VERSION = replace(mvindex(build, 12), "\\\c", ","), %%ci22%%_BUILD_VERSION = replace(mvindex(build, 13), "\\\c", ",")\
    | fields - build\
    | fields _time *]\
| stats values(ss) as ss, values(iteration) as iteration, values(result) as result, values(duration) as duration, values(derived_cause) as derived_cause, values(PIPELINE_URL) as PIPELINE_URL, values(p_number) as p_number, values(nominal) as nominal, values(scen_count) as scen_count, values(scen_passed) as scen_passed, values(core_tests) as core_tests, values(core_passed) as core_passed, values(req_count) as req_count, values(req_scens) as req_scens, values(%%ci33%%_BUILD_TYPE) as %%ci33%%_BUILD_TYPE, values(%%ci33%%_BUILD_VERSION) as %%ci33%%_BUILD_VERSION, values(%%ci21%%_BUILD_VERSION) as %%ci21%%_BUILD_VERSION, values(%%ci22%%_BUILD_VERSION) as %%ci22%%_BUILD_VERSION, values(planned_regression) as planned_regression, values(planned_regression_failed) as planned_regression_failed by _time, instance, ci, release, number\
| eval scen_failed = scen_count - scen_passed\
| where isnotnull(p_number)

[PIVT Jenkins TTR]
action.email.useNSSubject = 1
action.lookup = 0
action.lookup.filename = pivt_jenkins_ttr.csv
alert.track = 0
cron_schedule = 15 * * * *
disabled = 0
dispatch.earliest_time = 0
dispatch.latest_time = now
display.general.timeRangePicker.show = 0
enableSched = 1
search = index=pivt_jenkins stage!=Pipeline earliest=0\
| fields _time instance ci stage release number result ttr\
| sort 0 -_time\
| ttr ttrfield=ttr resultfield=result passvalue=SUCCESS lookbeyondboundary=True instance ci stage release\
| where isnotnull(ttr)\
| table _time instance ci stage release number result ttr\
| outputlookup pivt_jenkins_ttr.csv

[PIVT Scenario Truth]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = pivt
request.ui_dispatch_view = search
search = | inputlookup scenario_truth.csv\
| eval ci = case(CI=="%%ci25%%", "%%ci10%%", CI=="%%ci23%%", "%%ci7%%", CI=="%%ci24%%", "%%ci8%%", true(), CI)

[PIVT FCO Report]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = pivt
request.ui_dispatch_view = search
search = index=pivt_platform_fco_ft source="*scenarios*" job_release=$release$\
| makemv delim=":" tags\
| eval core = mvfilter(match(tags, "^coredes\."))\
| where isnotnull(core) and core != "coredes.6"\
| eval sc = mvfilter(match(tags, "^sc\."))\
| table _time job_number job_release feature_id id report_name result tags core sc\
| stats count as scen_count, count(eval(result=="passed")) as scen_passed by core, sc\
| eval pass_rate = scen_passed / scen_count\
| stats count as sc_count, count(eval(pass_rate >= .8)) as sc_passed, sum(scen_passed) as scen_passed, sum(scen_count) as scen_count by core\
| eval Core = replace(core, "coredes.", "")\
| addcoltotals labelfield=Core\
| eval "SC Score" = round(sc_passed / sc_count * 100)\
| eval "Scenario Score" = round(scen_passed / scen_count * 100)\
| rename sc_passed as "SCs Passed"\
| rename sc_count as "SCs Tested"\
| rename scen_passed as "Scenarios Passed"\
| rename scen_count as "Scenarios Tested"\
| table Core "SCs Passed" "SCs Tested" "SC Score" "Scenarios Passed" "Scenarios Tested" "Scenario Score"
